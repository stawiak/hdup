chaos {

    testMarker = 239
    host = localhost
    port = 8080
    timeWindowProcessInterval = 10 seconds
    expiredTimeWindow = 9.5 minutes

    hbase {
        host = node0
        scanCacheSize = 1000
        batchSize = 1000
        interpolatedBatchSize = 10000
        rollupBatchSize = 10
        tablePoolSize = 100
        tableName = msmt
        minuteInterpolatedTableName = ismt
        rollupTableName = rsmt
        columnFamilyName = d
        energyQualifierName = e
        currentQualifierName = c
        vampireQualifierName = v
    }

    activemq {
        host = node0
        port = 61616
        queue = msmt
    }

    akka {
        # event-handlers = ["akka.event.Logging$DefaultLogger"]
        event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

        loglevel = DEBUG
        # log-config-on-start = on

        actor {

            debug {
                # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
                autoreceive = on

                # enable DEBUG logging of actor lifecycle changes
                lifecycle = on
            }

            deployment {

                  /top/writeMaster/workerRouter {
                    router = smallest-mailbox
                    nr-of-instances = 2
                  }

                  workers-dispatcher {

                    type = "Dispatcher"
                    executor = "thread-pool-executor"

                        # This will be used if you have set "executor = "thread-pool-executor""
                        thread-pool-executor {
                            # Keep alive time for threads
                            keep-alive-time = 60s

                            # Min number of threads to cap factor-based core number to
                            core-pool-size-min = 8

                            # The core pool size factor is used to determine thread pool core size
                            # using the following formula: ceil(available processors * factor).
                            # Resulting size is then bounded by the core-pool-size-min and
                            # core-pool-size-max values.
                            core-pool-size-factor = 3.0

                            # Max number of threads to cap factor-based number to
                            core-pool-size-max = 64

                            # Minimum number of threads to cap factor-based max number to
                            # (if using a bounded task queue)
                            max-pool-size-min = 8

                            # Max no of threads (if using a bounded task queue) is determined by
                            # calculating: ceil(available processors * factor)
                            max-pool-size-factor = 3.0

                            # Max number of threads to cap factor-based max number to
                            # (if using a bounded task queue)
                            max-pool-size-max = 64

                            # Specifies the bounded capacity of the task queue (< 1 == unbounded)
                            task-queue-size = -1

                            # Specifies which type of task queue will be used, can be "array" or
                            # "linked" (default)
                            task-queue-type = "linked"

                            # Allow core threads to time out
                            allow-core-timeout = on
                        }

                  }


            }

        }
    }
}
